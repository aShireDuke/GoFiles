using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;
using System.Text;
using System.Windows.Forms;
using System.Xml;
using System.Xml.Linq;
using Microsoft.Office.Tools.Word;
using Microsoft.VisualStudio.Tools.Applications.Runtime;
using Office = Microsoft.Office.Core;
using Word = Microsoft.Office.Interop.Word;

namespace GoWordDoc
{
    /// <summary>
    /// This document class is autogenerated by the VS project to serve as a communication link
    /// between Word and your custom code.  ThisDocument class gives you access to members of the 
    /// Document host item to perform basic tasks in your customization, such as running code when 
    /// the document is opened or closed. MSDN "Document Host" article: https://msdn.microsoft.com/en-us/library/zzf9223t.aspx
    /// This class also reuses code from MSDN tutorial: "Walkthrough: Binding Content Controls to Custom XML Parts"
    /// </summary>
    public partial class ThisDocument
    {

        // Instructs the Visual Studio Tools for Office runtime to add the specified data object 
        // to the data cache in the document. See method "AddCustomXmlPart" for more details
        [CachedAttribute()]

        public string employeeXMLPartID = string.Empty;
        private Office.CustomXMLPart employeeXMLPart; 

        private void ThisDocument_Startup(object sender, System.EventArgs e)
        {
            //// HACK create debug XML file in main directory.  If want to use it
            //// manually copy over to be the GoData.xml that is embedded in this project
            //XmlDocGenerator goXmlFile = new XmlDocGenerator("GeneratedData.xml");
            //goXmlFile.GenerateGoXml("J-54224", "Smith", "1999-04-01", "Manager");

            // Read embedded xml fil, and bind to content controls in the document
            string xmlData = GetXmlFromEmbeddedResource();

            if (xmlData != null)
            {
                AddCustomXmlPart(xmlData);
                BindControlsToCustomXmlPart();
            }

        }

        private void ThisDocument_Shutdown(object sender, System.EventArgs e)
        {
        }

        ///<summary>
        /// Reads an embedded XML resource file from the project into a stream.
        ///</summary>
        ///<returns>
        /// Returns the contents as an XML string.
        /// </returns> 
        private string GetXmlFromEmbeddedResource()
        {
            // Note that this xml file must be added to the project, 
            // then click properties ->  "Build Action" -> "Embedded Resource"
            string sourceFileName = "GoWordDoc.GoData.xml";
            System.Reflection.Assembly asm =
                System.Reflection.Assembly.GetExecutingAssembly();
            string [] allResourceNames = asm.GetManifestResourceNames();
            System.IO.Stream stream1 = asm.GetManifestResourceStream(
                sourceFileName);

            using (System.IO.StreamReader resourceReader =
                    new System.IO.StreamReader(stream1))
            {
                if (resourceReader != null)
                {
                    return resourceReader.ReadToEnd();
                }
            }

            return null;
        }

        ///<summary>
        ///Creates a new custom XML part that contains an XML 
        ///string that is passed to the method. To ensure that the custom XML part is only 
        ///created once, the method creates the custom XML part only if a custom XML part 
        ///with a matching GUID does not already exist in the document
        ///</summary>
        private void AddCustomXmlPart(string xmlData)
        {
            // The first time this method is called, it saves the value of the Id property to the employeeXMLPartID
            //string. The value of the employeeXMLPartID string is persisted in the document because 
            //it was declared by using the CachedAttribute attribute.
            if (xmlData != null)
            {
                employeeXMLPart = this.CustomXMLParts.SelectByID(employeeXMLPartID);
                if (employeeXMLPart == null)
                {
                    employeeXMLPart = this.CustomXMLParts.Add(xmlData);
                    employeeXMLPart.NamespaceManager.AddNamespace("ns",
                        @"http://DLOGoFiles.com/namespaces/GoSchema/");
                    employeeXMLPartID = employeeXMLPart.Id;
                }
            }
        }

        /// <summary>
        /// Binds control to an element in the custom XML part and sets the date display
        /// format of the DatePickerContentControl.
        /// </summary>
        private void BindControlsToCustomXmlPart()
        {
             // Used by BindControlsToCustomXmlPart
            string prefix = "xmlns:ns='http://DLOGoFiles.com/namespaces/GoSchema/'";

            // Bind each content control in the document to a Xpath query.  
            // Use "this" to refer to the active word doc
            string xPathName = "ns:files/ns:file/ns:clientName";
            this.plainTextContentControl1.XMLMapping.SetMapping(xPathName,
                prefix, employeeXMLPart);

            string xPathDate = "ns:files/ns:file/ns:posessionDate";
            this.datePickerContentControl1.DateDisplayFormat = "MMMM d, yyyy";
            this.datePickerContentControl1.XMLMapping.SetMapping(xPathDate,
                prefix, employeeXMLPart);

            string xPathTitle = "ns:files/ns:file/ns:clientTitle";
            this.dropDownListContentControl1.XMLMapping.SetMapping(xPathTitle,
                prefix, employeeXMLPart);
        }

        #region VSTO Designer generated code

        /// <summary>
        /// Required method for Designer support - do not modify
        /// the contents of this method with the code editor.
        /// </summary>
        private void InternalStartup()
        {
            this.Startup += new System.EventHandler(this.ThisDocument_Startup);
            this.Shutdown += new System.EventHandler(this.ThisDocument_Shutdown);
        }

        #endregion

    }
}
